import Head from 'next/head';
// import Image from 'next/image';
import styles from '../styles/Home.module.css';
import { useSession } from "next-auth/react";
import Dashboard from './dashboard';
import { prisma, PrismaClient } from "@prisma/client";
// import {useState} from 'react';
import { useRouter } from 'next/router';
// import LogInOutButton from '../components/login-btn';
import {useEffect, useRef,useState} from 'react';
import LoginWrapper from './login';
import getAllUsers from './api/getAllUsers';


export default function Home(props) {

  const { data: session } = useSession();
  const [inUnity,setInUnity] = useState(false);
  const fullUserData = useRef({});
  //console.log("PROPSS IN HOME: ", props);
  //console.log("session in index: ", session);
  // console.log("PROPS ARE USERS HERE? ", props);
  const router = useRouter()
  let listSubusers = []
 let subusers = []
 console.log("sesh check: ", session);
 //console.log("sesh user check: ", session.user);
 console.log("props check: ", props);

  if(session && props){
    // console.log('SESSION--------------- ', session);
    console.log('full user data: ', fullUserData.current[0]);
    fullUserData.current = props.allUsers.filter(i=>i.user_name === session.user.name);
    //console.log("FULL USER DATA: ", fullUserData.current);
    //console.log("full user data: ", fullUserData.current);
    if(fullUserData.current){
      listSubusers = fullUserData.current[0].subusers_array.map(i=>i);
    }
    if(fullUserData.current){
      listSubusers = fullUserData.current[0].subusers_array.map((subuser, i) =>
      <option label={subuser} value={subuser} key={i}>{subuser}</option>
      );
    }
  } else {
    // console.log("no session yet");
  }


  return (
    <div id="pageWrapper" className={styles.container}>
      <Head>
        {
        !session
        ?
        <title>Verify</title>
        :
        <title>Logged In</title>
        }
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {
          !session
          ?
          <>
            <h1 className={styles.title}>
              Status:  
              {
                session
              ?
                <span style={{color:"rgba(50,220,300,1)"}}> logged in</span>
              :
                <span style={{color:"rgba(50,220,300,1)"}}> logged out</span>
              }
            </h1>
            <LoginWrapper allUsers={props.allUsers}></LoginWrapper>
          </>
        :
          <>
      
            {/* <select style={{
                display:"flex", 
                id:"subusersSelect",
                class:"select",
                flexDirection:"row",
                zIndex: 7,
                position: "absolute",
                top: "4%",
                width: "8rem",
                maxWidth: "8rem",
                right: "2rem",
                textAlign: "center",
                borderRadius:"24px",
                border: "solid 1px rgba(50,220,300,1)"
                }}    
            >
                    <option  disabled>--Subusers--</option>
                    {listSubusers}
                </select> */}
            <Dashboard inUnity={setInUnity} listSubusers={listSubusers} session={session} fullUserData={fullUserData} allUsers={props.allUsers}/>     
          </>
        }

      </main>

      <footer className={styles.footer}>
{/* Hello */}
      </footer>
    </div>
  )
}




export async function getStaticProps(){
  let allUsers = await getAllUsers();
  return {
    props: 
    {
      allUsers: JSON.parse(JSON.stringify(allUsers))
    },
    revalidate: 10 // 10 seconds 
  }
}
