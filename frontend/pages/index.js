import Head from 'next/head';
import styles from '../styles/Home.module.css';
import { useSession } from "next-auth/react";
import Dashboard from './dashboard';
import { prisma, PrismaClient } from "@prisma/client";
import { useRouter } from 'next/router';
import {useEffect, useRef,useState} from 'react';
import LoginWrapper from './login';
import getAllUsers from './api/getAllUsers';



export default function Home(props) {

  const { data: session } = useSession();
  const [inUnity,setInUnity] = useState(false);
  const fullUserData = useRef({});
  const router = useRouter()
  let listSubusers = []
  let subusers = []

  if(session && props){
    // console.log('SESSION--------------- ', session);
    // console.log('full user data: ', fullUserData.current[0]);
    fullUserData.current = props.allUsers.filter(i=>i.user_name === session.user.name);
    //console.log("FULL USER DATA: ", fullUserData.current);
    //console.log("full user data: ", fullUserData.current);
    if(fullUserData.current && fullUserData.current[0].subusers_array){
      listSubusers = fullUserData.current[0].subusers_array.map(i=>i);
    }
    if(fullUserData.current){
      listSubusers = fullUserData.current[0].subusers_array.map((subuser, i) =>
      <option label={subuser} value={subuser} key={i}>{subuser}</option>
      );
    }
  } else {
    // console.log("no session yet");
  }

  

  return (
    <div id="pageWrapper" className={styles.container}>
      <Head>
        {
        !session
        ?
        <title>Verify</title>
        :
        <title>Logged In</title>
        }
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {
          !session
          ?
          <>
            <h1 className={styles.title}>
              <span style={{fontSize:"40px"}}>Status:</span>
              {
                session
              ?
                <span style={{fontSize:"40px",color:"rgb(12, 95, 80)"}}> logged in</span>
              :
                <span style={{fontSize:"40px",color:"rgb(12, 95, 80)"}}> logged out</span>
              }
            </h1>
            <LoginWrapper allUsers={props.allUsers}></LoginWrapper>
          </>
        :
          <Dashboard userAlias={fullUserData.current[0].user_name} inUnity={setInUnity} listSubusers={listSubusers} session={session} fullUserData={fullUserData} allUsers={props.allUsers} blobServiceClient={props.blobServiceClient}/>     
        }

      </main>

      {/* <footer className={styles.footer}>

      </footer> */}
    </div>
  )
}




export async function getStaticProps(){
  const { DefaultAzureCredential } = require("@azure/identity");
  const { BlobServiceClient } = require("@azure/storage-blob");
  // Enter your storage account name
  const account = "audblobs";
  const connStr = process.env.NEXT_PUBLIC_AZURE_CONN_STRING;

  const blobServiceClient = BlobServiceClient.fromConnectionString(connStr); 
  console.log("BLOB Service Client: ", blobServiceClient);

  let allUsers = await getAllUsers();
  return {
    props: 
    {
      allUsers: JSON.parse(JSON.stringify(allUsers)),
      blobServiceClient: JSON.parse(JSON.stringify(blobServiceClient))
    },
    revalidate: 10 // 10 seconds 
  }
}
