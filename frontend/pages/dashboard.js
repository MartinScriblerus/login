import Head from 'next/head';
import Image from 'next/image';
import Link from 'next/link'
import styles from '../styles/Home.module.css'
import LogInOutButton from '../components/login-btn';
import PropTypes from "prop-types";
// import { withRouter } from "react-router";

import { getSession } from "next-auth/react";

import { useRouter } from 'next/router';

function RedirectPage({ ctx }) {
  const router = useRouter()
  // Make sure we're in the browser
  if (typeof window !== 'undefined') {
    router.push('/login');
    return; 
  }
}

RedirectPage.getInitialProps = ctx => {
  // We check for ctx.res to make sure we're on the server.
  if (ctx.res) {
    ctx.res.writeHead(302, { Location: '/login' });
    ctx.res.end();
  }
  return { };
}

export default function Dashboard({session}){
    console.log("WHAT IS SESSION? ", session);
    const user = session?.user;

    console.log("USER IS: ", user);
    
    if(session){
        return (
            <div className={styles.container}>
                <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
                </Head>
                <main className={styles.main}>
                    <h1 className={styles.title}>   
                        <div>This is a dashboard for logged in users only</div>
                        <LogInOutButton />
                    </h1>
                </main>
                <footer className={styles.footer}>
                    <a
                    href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
                    target="_blank"
                    rel="noopener noreferrer"
                    >
                        Powered by{' '}
                        <span className={styles.logo}>
                            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
                        </span>
                    </a>
                </footer>
            </div>
        )
    } else {
        console.log("no current session");
        // // redirect
        return <RedirectPage/>
    }



}

export async function getServerSideProps(context){
    const session = await getSession(context);
    // console.log("context is: ", context);
    // // redirect
    // if(!session) {
    //     console.log("no sesh!");
    //     return { redirect: { destination: '/login', permanent: false }}
    // } else {
    //     console.log("returning a session!!!");
    // }

    return {
        props: { session }
    }
}